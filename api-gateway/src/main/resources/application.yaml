server:
  port: 8080

spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      server:
        webflux:
          routes:
            - id: user-service # her servisin gateway taranıdan eşsiz tanımasını sağlar
              uri: lb://USER-SERVICE  # ? Load balancing ile user-service'e y�nlendir
              predicates:
                  - Path=/api/users/** #gelen istekleri yönlendireceği yol.Ama round robin ile yapar birden fazla farklı portlarda çalışan yapı olabilir.

            - id: product-service
              uri: lb://PRODUCT-SERVICE
              predicates:
                  - Path=/api/products/**

            - id: order-service
              uri: lb://ORDER-SERVICE
              predicates:
                  - Path=/api/orders/**

            - id: shipping-service
              uri: lb://SHIPPING-SERVICE
              predicates:
                  - Path=/api/shippings/**

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
logging:
  level:
    com.ecommerce: DEBUG
    org.springframework.cloud.openfeign: DEBUG
    io.github.resilience4j: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always